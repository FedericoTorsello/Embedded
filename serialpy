#!/usr/bin/env python3
import importlib.util
import serial
import simplejson as json
import threading
import sys

# Import serial threaded from pyserial
spec = importlib.util.spec_from_file_location(
    "LineReader", "./modules/serial/threaded/__init__.py")
serialThread = importlib.util.module_from_spec(spec)
spec.loader.exec_module(serialThread)

arduinoPort = serial.Serial("/dev/ttyACM1",
                            9600,
                            parity=serial.PARITY_NONE,
                            stopbits=serial.STOPBITS_ONE,
                            bytesize=serial.EIGHTBITS,
                            timeout=1)

# {"sensor":"gps","time":1351824120,"data":[48.756080,2.302038]}


class PrintLines(serialThread.LineReader):
    def connection_made(self, transport):
        super(PrintLines, self).connection_made(transport)

    def handle_line(self, data):
        self.printJSON(data)

    def connection_lost(self, exc):
        print("Port Closed!")

    def printJSON(self, data):
        try:
            data = json.loads(data)
            print(data.get('msg'))
        except ValueError:
            pass

class WriteWorker(threading.Thread):
    readw = None
    
    def __init__(self, rw):
        super(WriteWorker, self).__init__()
        self.readw = rw

    def run(self):
        import time
        
        while True:
            self.readw.write('{"msg":"ciao"}\n'.encode("ascii"))
            time.sleep(2)


def main():
    readWorker = serialThread.ReaderThread(arduinoPort, PrintLines)
    w = WriteWorker(readWorker)
    readWorker.start()
    w.daemon = True
    w.start()
    w.join()
    readWorker.join()


if __name__ == '__main__':
    try :
        main()
    except (KeyboardInterrupt, SystemExit):
        print('Bye!')
