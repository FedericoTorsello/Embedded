#!/usr/bin/env python3
import asyncio
import sys
import utils as utils
from serial.threaded import ReaderThread


def printm(msg, f, t):
    print("Message: {} for {} from {}".format(msg, t, f))


async def dispatch(wworker):
    while True:
        data = utils.from_arduino.get()
        if data is not None:
            msg, f, t = utils.parse_json(data)
        else:
            msg = f = t = None
        if all(k is not None for k in (msg, f, t)):
            if t == utils.ARDUINO:
                wworker.append_message(data)
            if t == utils.LOCAL:
                await utils.to_remote.put(data)
                await asyncio.sleep(1)
            if t == utils.REMOTE:
                printm(msg, f, t)


if __name__ == '__main__':
    try:
        test_msg = '{"msg":"ciao", "from":"pythonSerial", "to":"me"}'
        arduino = utils.connect_arduino()
        s = ReaderThread(arduino, utils.PrintLines)
        s.start()
        m, n = s.connect()
        utils.loop.create_task(dispatch(utils.WriteWorker(s)))
        print("Press Ctrl-C to stop")
        utils.loop.run_forever()
        s.join()
    except (KeyboardInterrupt, SystemExit):
        print("Bye!")
    finally:
        try:
            arduino.flushInput()
            arduino.flushOutput()
            arduino.close()
        except NameError:
            pass
        utils.loop.stop()
        utils.loop.close()
        sys.exit(1)
